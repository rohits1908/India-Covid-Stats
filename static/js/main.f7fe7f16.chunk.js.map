{"version":3,"sources":["components/HospitalBedsSummary/HospitalBedsSummary.module.css","components/StatsSummary/StatsSummary.module.css","components/Navigation/Navigation.module.css","components/StateTable/StateTable.module.css","components/HospitalBeds/HospitalBedsStats.module.css","components/Helpline/Helpline.module.css","components/Navigation/Navigation.js","Reducer/StateDataReducer.js","Constants/Index.js","Context/StateDataContext.js","components/StatsSummary/StatsSummary.js","components/StateTable/StateTable.js","Actions/Index.js","components/TestingStats/TestingStats.js","components/HospitalBedsSummary/HospitalBedsSummary.js","components/HospitalBeds/HospitalBedsStats.js","components/PrimaryHelpline/PrimaryHelpline.js","components/Helpline/Helpline.js","components/Notifications/Notifications.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","className","classes","home","to","covid","navLinks","stateDataReducer","state","action","type","data","payload","StateContext","createContext","StateDataContextProvider","props","useReducer","fetchData","dispatch","Provider","value","children","StatsSummary","useContext","summary","summaryCard","eachCard","style","color","confirmedCasesIndian","discharged","deaths","StateTable","useEffect","fetch","then","response","json","render","regional","flTable","length","map","ele","index","key","loc","totalConfirmed","tableWrapper","TestingStats","Card","CardImg","top","width","src","alt","CardBody","CardTitle","day","CardText","totalSamplesTested","Button","onClick","path","source","window","open","HospitalBedsSummary","totalHospitals","totalBeds","ruralHospitals","ruralBeds","urbanHospitals","urbanBeds","HospitalBedsStats","PrimaryHelpline","contacts","primary","email","href","facebook","number","twitter","media","Helpline","Notifications","notifications","title","link","cursor","App","StateDataContext","exact","component","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7fe7f16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryCard\":\"HospitalBedsSummary_summaryCard__3Rgeu\",\"eachCard\":\"HospitalBedsSummary_eachCard__LQ_Sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summaryCard\":\"StatsSummary_summaryCard__RkJug\",\"eachCard\":\"StatsSummary_eachCard__8FrfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"covid\":\"Navigation_covid__56it-\",\"india\":\"Navigation_india__1_xSd\",\"navLinks\":\"Navigation_navLinks__3hlP8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"StateTable_tableWrapper__10mbN\",\"flTable\":\"StateTable_flTable__Yo6Ih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"HospitalBedsStats_tableWrapper__3mVOz\",\"flTable\":\"HospitalBedsStats_flTable__2hi8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Helpline_tableWrapper__2dRWk\",\"flTable\":\"Helpline_flTable__224eL\"};","import React from \"react\";\r\nimport classes from \"./Navigation.module.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navigation = () => {\r\n  \r\n  return (\r\n    <div className={classes.home}>\r\n      <nav>\r\n        <Link to=\"/\">\r\n        <span className={classes.covid}>\r\n          Covid19 <br /> India\r\n        </span>\r\n        </Link>\r\n        <ul className={classes.navLinks}>\r\n          <Link to=\"/testing-stats\">\r\n            <li>Testing Stats</li>\r\n          </Link>\r\n          \r\n          <Link to=\"/hospital-beds\">\r\n            <li>Hospitals and Beds</li>\r\n          </Link>\r\n          <Link to=\"/helpline-info\">\r\n            <li>Contact and Helpline</li>\r\n          </Link>\r\n          <Link to = \"/notifications\">\r\n            <li>Notifications</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import {STORE_STATE_DATA, STORE_TESTING_DATA, STORE_HOSPITAL_DATA, \r\n        STORE_HELPLINE_DATA, STORE_NOTIFICATION_DATA} from '../Constants/Index'; \r\n\r\nexport const stateDataReducer = (state, action) =>{\r\n    switch(action.type)\r\n    {\r\n        case STORE_STATE_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n\r\n        case STORE_TESTING_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n\r\n        case STORE_HOSPITAL_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n\r\n        case STORE_HELPLINE_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n\r\n        case STORE_NOTIFICATION_DATA:\r\n            return{\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","export const STORE_STATE_DATA = 'STORE_STATE_DATA';\r\nexport const STORE_TESTING_DATA = 'STORE_TESTING_DATA';\r\nexport const STORE_HOSPITAL_DATA = 'STORE_HOSPITAL_DATA';\r\nexport const STORE_HELPLINE_DATA = 'STORE_HELPLINE DATA';\r\nexport const STORE_NOTIFICATION_DATA = 'STORE_NOTIFICATION_DATA';","import React, {createContext, useReducer} from 'react'\r\nimport {stateDataReducer} from '../Reducer/StateDataReducer';\r\n\r\nexport const StateContext = createContext();\r\n\r\nconst StateDataContextProvider = (props) => {\r\n  \r\n      const initialState = {\r\n        data:''\r\n      }\r\n\r\n      const [fetchData, dispatch] = useReducer(stateDataReducer, initialState);\r\n      \r\n    return (\r\n        <StateContext.Provider value = {{fetchData, dispatch}}>\r\n            {props.children}\r\n        </StateContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StateDataContextProvider;\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../Context/StateDataContext';\r\nimport classes from './StatsSummary.module.css';\r\n\r\nconst StatsSummary = () => {\r\n\r\n    const {fetchData} = useContext(StateContext);\r\n    \r\n    if(fetchData.data)\r\n    {\r\n        const {data: rootData} = fetchData;\r\n        const {data} = rootData;\r\n        const {summary} = data;\r\n\r\n        if(typeof summary !== 'undefined')\r\n        return (\r\n            <div className={classes.summaryCard}>\r\n                <div className={classes.eachCard}>\r\n                    <h5 style={{color:'Red'}}>Confirmed</h5>\r\n                    <h1 style={{color:'Red'}}>{summary.confirmedCasesIndian}</h1>\r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5 style={{color:'DodgerBlue'}}>Active</h5>\r\n                    <h1 style={{color:'DodgerBlue'}}>{summary.confirmedCasesIndian - summary.discharged - summary.deaths}</h1>\r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5 style={{color:'Green'}}>Recovered</h5>\r\n                    <h1 style={{color:'Green'}}>{summary.discharged}</h1>\r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5 style={{color:'Grey'}}>Deaths</h5>\r\n                    <h1 style={{color:'Grey'}}>{summary.deaths}</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return null;\r\n}\r\n\r\nexport default StatsSummary;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport classes from './StateTable.module.css';\r\nimport { StateContext } from \"../../Context/StateDataContext\";\r\nimport {storeStatesData} from '../../Actions/Index';\r\nimport StatsSummary from '../StatsSummary/StatsSummary';\r\n\r\n\r\nexport default function StateTable() {\r\n  \r\n  const {fetchData, dispatch} = useContext(StateContext);\r\n\r\n  useEffect(() => {\r\n    const url = \"https://api.rootnet.in/covid19-in/stats/latest\";\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(storeStatesData(json)));\r\n  }, []);\r\n\r\n  const {data: rootData} = fetchData;\r\n  const {data} = rootData;\r\n  let render = null;\r\n\r\n  if(typeof data !== 'undefined')\r\n  {\r\n    const {regional} = data;\r\n    render = (\r\n          <table className = {classes.flTable}>\r\n            <thead>\r\n              <tr>\r\n                <th>State/UT</th>\r\n                <th>Confirmed</th>\r\n                <th>Active</th>\r\n                <th>Recovered</th>\r\n                <th>Deceased</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {regional &&\r\n                regional.length > 0 &&\r\n                regional.map((ele, index) => (\r\n                  <tr key={index}>\r\n                    <td>{ele.loc}</td>\r\n                    <td>{ele.totalConfirmed}</td>\r\n                    <td>{ele.totalConfirmed - ele.discharged - ele.deaths}</td>\r\n                    <td>{ele.discharged}</td>\r\n                    <td>{ele.deaths}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n    );\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <StatsSummary/>\r\n      <div className = {classes.tableWrapper}>\r\n        {render}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {STORE_STATE_DATA, STORE_TESTING_DATA, STORE_HOSPITAL_DATA, \r\n        STORE_HELPLINE_DATA, STORE_NOTIFICATION_DATA} from '../Constants/Index';\r\n\r\n\r\nexport const storeStatesData = (payload) => {\r\n    return {\r\n        type: STORE_STATE_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const storeTestingData = (payload) => {\r\n    return {\r\n        type: STORE_TESTING_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const storeHospitalData = (payload) => {\r\n    return {\r\n        type: STORE_HOSPITAL_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const storeHelplineData = (payload) => {\r\n    return {\r\n        type: STORE_HELPLINE_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const storeNotificationData = (payload) => {\r\n    return {\r\n        type: STORE_NOTIFICATION_DATA,\r\n        payload\r\n    }\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport { StateContext } from '../../Context/StateDataContext';\r\nimport {storeTestingData} from '../../Actions/Index';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, Button\r\n  } from 'reactstrap';\r\n\r\nexport default function TestingStats() {\r\n\r\n    const {fetchData, dispatch} = useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        let url = 'https://api.rootnet.in/covid19-in/stats/testing/latest';\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(json => dispatch(storeTestingData(json))); \r\n    }, [])\r\n\r\n    const redirectHandler = (path) =>{\r\n        window.open(path, \"_blank\")\r\n    }\r\n\r\n    const {data:rootData} = fetchData;\r\n    const {data} = rootData;\r\n    if(typeof data !== 'undefined')\r\n    {\r\n        return (\r\n        <Card>\r\n        <CardImg top width=\"20%\" src=\"testing.jpg\" alt=\"Card image cap\" />\r\n        <CardBody>\r\n        <CardTitle>Testing Statistics as of {data.day}</CardTitle>\r\n        <CardText>Total Samples Tested : {data.totalSamplesTested}</CardText>\r\n          <Button onClick = {() => redirectHandler(data.source)}>Source</Button>\r\n        </CardBody>\r\n      </Card>\r\n        )\r\n    }\r\n    return null;\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../Context/StateDataContext';\r\nimport classes from './HospitalBedsSummary.module.css';\r\n\r\nconst HospitalBedsSummary = () => {\r\n\r\n    const {fetchData} = useContext(StateContext);\r\n    const {data:rootData} = fetchData;\r\n    const {data} = rootData;\r\n    \r\n    if(typeof data !== 'undefined')\r\n    {\r\n        const{summary} = data\r\n        if(typeof summary !== 'undefined')\r\n        return (\r\n            <div className = {classes.summaryCard}>\r\n                <div className={classes.eachCard}>\r\n                    <h5>Total Hospitals</h5>\r\n                    <h3>{summary.totalHospitals}</h3>\r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5>Total No. of Beds</h5>\r\n                    <h3>{summary.totalBeds}</h3>    \r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5>Rural Hospitals</h5>\r\n                    <h3>{summary.ruralHospitals}</h3>    \r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5>Rural Beds</h5>\r\n                    <h3>{summary.ruralBeds}</h3>    \r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5>Urban Hospitals</h5>\r\n                    <h3>{summary.urbanHospitals}</h3>    \r\n                </div>\r\n                <div className={classes.eachCard}>\r\n                    <h5>Urban Beds</h5>\r\n                    <h3>{summary.urbanBeds}</h3>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    return null;\r\n   \r\n}\r\n\r\nexport default HospitalBedsSummary;","import React, {useContext, useEffect} from 'react';\r\nimport { StateContext } from '../../Context/StateDataContext';\r\nimport {storeHospitalData} from '../../Actions/Index';\r\nimport classes from './HospitalBedsStats.module.css';\r\nimport HospitalBedsSummary from '../HospitalBedsSummary/HospitalBedsSummary';\r\n\r\nexport default function HospitalBedsStats() {\r\n\r\n    const {fetchData, dispatch} = useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        const url = 'https://api.rootnet.in/covid19-in/hospitals/beds';\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(json => dispatch(storeHospitalData(json)));\r\n    }, [])\r\n\r\n    const {data: rootData} = fetchData;\r\n    const {data} = rootData;\r\n    let render = null;\r\n\r\n  if(typeof data !== 'undefined')\r\n  {\r\n    const {regional} = data;\r\n    render = (\r\n          <table className = {classes.flTable}>\r\n            <thead>\r\n              <tr>\r\n                <th>State</th>\r\n                <th>Total Hospitals</th>\r\n                <th>Total Beds</th>\r\n                <th>Rural Hospitals</th>\r\n                <th>Rural Beds</th>\r\n                <th>Urban Hospitals</th>\r\n                <th>Urban Beds</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {regional &&\r\n                regional.length > 0 &&\r\n                regional.map((ele, index) => (\r\n                  <tr key={index}>\r\n                    <td>{ele.state}</td>\r\n                    <td>{ele.totalHospitals}</td>\r\n                    <td>{ele.totalBeds}</td>\r\n                    <td>{ele.ruralHospitals}</td>\r\n                    <td>{ele.ruralBeds}</td>\r\n                    <td>{ele.urbanHospitals}</td>\r\n                    <td>{ele.urbanBeds}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n    );\r\n  }\r\n\r\n    return (\r\n        <>\r\n        <HospitalBedsSummary/>\r\n        <div className = {classes.tableWrapper}>\r\n            {render}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport { StateContext } from '../../Context/StateDataContext';\r\n\r\nconst PrimaryHelpline = () => {\r\n\r\n    const {fetchData} = useContext(StateContext)\r\n    const {data:rootData} = fetchData;\r\n    \r\n    const {data} = rootData;\r\n    if(typeof data !== 'undefined')\r\n    {\r\n        const {contacts} = data;\r\n        if(typeof contacts !== 'undefined')\r\n        {\r\n            const {primary} = contacts\r\n            return (\r\n                <div>\r\n                   <p>Email : {primary.email}</p> \r\n                   <p>Facebook : <a href={primary.facebook}>Facebook</a></p> \r\n                   <p>Number : {primary.number}</p> \r\n                   <p>Toll-Free Number : {primary[\"number-tollfree\"]}</p> \r\n                   <p>Twitter : <a href={primary.twitter}>Twitter</a></p> \r\n                   <p>Media : <a href={primary.media[0]}>Media</a></p> \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default PrimaryHelpline;","import React, { useEffect, useContext } from \"react\";\r\nimport { StateContext } from \"../../Context/StateDataContext\";\r\nimport { storeHelplineData } from \"../../Actions/Index\";\r\nimport classes from './Helpline.module.css';\r\nimport PrimaryHelpline from '../PrimaryHelpline/PrimaryHelpline';\r\n\r\nconst Helpline = () => {\r\n  const { fetchData, dispatch } = useContext(StateContext);\r\n\r\n  useEffect(() => {\r\n    const url = \"https://api.rootnet.in/covid19-in/contacts\";\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((json) => dispatch(storeHelplineData(json)));\r\n  }, []);\r\n\r\n  const { data: rootData } = fetchData;\r\n  const { data } = rootData;\r\n  let render = null\r\n  if (typeof data !== \"undefined\") {\r\n    const { contacts } = data;\r\n    if (typeof contacts !== \"undefined\") {\r\n      const { regional } = contacts;\r\n\r\n      if (typeof regional !== \"undefined\") {\r\n        render =  (\r\n          <table className = {classes.flTable}>\r\n            <thead>\r\n              <tr>\r\n                <th>Location</th>\r\n                <th>Number</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {regional &&\r\n                regional.length > 0 &&\r\n                regional.map((ele, index) => (\r\n                  <tr key={index}>\r\n                    <td>{ele.loc}</td>\r\n                    <td>{ele.number}</td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n      <>\r\n        <PrimaryHelpline />\r\n        <div className = {classes.tableWrapper}>\r\n          {render}\r\n        </div>\r\n      </>\r\n\r\n  )\r\n};\r\n\r\nexport default Helpline;\r\n","import React, {useContext, useEffect} from 'react'\r\nimport { StateContext } from '../../Context/StateDataContext';\r\nimport {storeNotificationData} from '../../Actions/Index';\r\n\r\nconst Notifications = () => {\r\n\r\n    const {fetchData, dispatch} = useContext(StateContext)\r\n    let render = null;\r\n    useEffect(() => {\r\n      const url = 'https://api.rootnet.in/covid19-in/notifications'\r\n      fetch(url)\r\n      .then(response => response.json())\r\n      .then(json => dispatch(storeNotificationData(json)))\r\n    }, [])\r\n\r\n    const clickHandler = (link) => {\r\n      window.open(link, \"_blank\")\r\n    }\r\n    const {data:rootData} = fetchData;\r\n    const {data} = rootData\r\n    if(typeof data !== 'undefined')\r\n    {\r\n      const {notifications} = data\r\n      if(typeof notifications !== 'undefined')\r\n      {\r\n          render = (\r\n           \r\n              notifications &&\r\n              notifications.length > 0 &&\r\n              notifications.map((ele, index) => (\r\n                <div key ={index}>\r\n                  <p>Title : {ele.title}</p>\r\n                  <span onClick={() => clickHandler(ele.link)}>Link : <u style={{color:'blue', cursor:'pointer'}}>{ele.link}</u></span>\r\n                </div>\r\n          )))\r\n      }\r\n    }\r\n    return (\r\n        <div>\r\n          {render}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport StateTable from \"./components/StateTable/StateTable\";\nimport StateDataContextProvider from \"./Context/StateDataContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TestingStats from \"../src/components/TestingStats/TestingStats\";\nimport HospitalBedsStats from \"./components/HospitalBeds/HospitalBedsStats\";\nimport Helpline from \"./components/Helpline/Helpline\";\nimport Notifications from \"./components/Notifications/Notifications\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <StateDataContextProvider>\n          <Navigation />\n          <Switch>\n            <Route path='/testing-stats' exact component={TestingStats} />\n            <Route path='/hospital-beds' exact component={HospitalBedsStats} />\n            <Route path='/helpline-info' exact component={Helpline} />\n            <Route path='/notifications' exact component={Notifications} />\n            <Route path='/' exact component={StateTable} />\n          </Switch>\n        </StateDataContextProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}